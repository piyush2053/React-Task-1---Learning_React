{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\piyush.patel\\\\Desktop\\\\TASK 1 - Kishor dabi\\\\src\\\\pages\\\\Login.jsx\";\nimport React from \"react\";\nimport './Login.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useRef } from 'react';\n\nconst Login = () => {\n  //dfghjkl\n  let captchaText = document.querySelector('#captcha');\n  let userText = document.querySelector('#textBox');\n  let submitButton = document.querySelector('#submit');\n  let output = document.querySelector('#output');\n  let refreshButton = document.querySelector('#refresh');\n  let alphaNums = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n  let emptyArr = [];\n\n  for (let i = 1; i <= 7; i++) {\n    emptyArr.push(alphaNums[Math.floor(Math.random() * alphaNums.length)]);\n  }\n\n  captchaText.innerHTML = emptyArr.join('');\n  userText.addEventListener('keyup', function (e) {\n    if (e.keyCode === 13) {\n      if (userText.value === captchaText.innerHTML) {\n        output.classList.add(\"greenText\");\n        output.innerHTML = \"Correct!\";\n      } else {\n        output.classList.add(\"redText\");\n        output.innerHTML = \"Incorrect, please try again\";\n      }\n    }\n  });\n  refreshButton.addEventListener('click', function () {\n    userText.value = \"\";\n    let refreshArr = [];\n\n    for (let j = 1; j <= 7; j++) {\n      refreshArr.push(alphaNums[Math.floor(Math.random() * alphaNums.length)]);\n    }\n\n    captchaText.innerHTML = refreshArr.join('');\n    output.innerHTML = \"\";\n  }); //dfghjkl\n\n  const navigate = useNavigate();\n  const emailRef = useRef(undefined);\n  const passwordRef = useRef(undefined);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    let emailStored = localStorage.getItem(\"email\");\n    let passwordStored = localStorage.getItem(\"password\");\n\n    if (email === emailStored && password === passwordStored) {\n      console.log(\"True Credentials\");\n      navigate('/home');\n    } else {\n      console.log(false);\n    }\n\n    event.target.reset();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"30px\",\n      textAlign: \"center\",\n      margin: \"1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Task 1 - Kishor Dabi Sir\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"my-form bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyItems: \"center\",\n      padding: \"20px\",\n      borderRadius: \"20px\",\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Login Form\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      borderRadius: \"20px\",\n      backgroundColor: \"#FFEBEE\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    class: \"email\",\n    placeholder: \"Email\",\n    ref: emailRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"password\",\n    name: \"password\",\n    class: \"password\",\n    placeholder: \"Password \",\n    ref: passwordRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: \"lsRememberMe\",\n    id: \"rememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"rememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Save password\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"captchaBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"captcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"captcha text\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"textBox\",\n    type: \"text\",\n    name: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"refresh\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Refresh\")), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Not a member? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 39\n    }\n  }, \"Signup now\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/piyush.patel/Desktop/TASK 1 - Kishor dabi/src/pages/Login.jsx"],"names":["React","useNavigate","useRef","Login","captchaText","document","querySelector","userText","submitButton","output","refreshButton","alphaNums","emptyArr","i","push","Math","floor","random","length","innerHTML","join","addEventListener","e","keyCode","value","classList","add","refreshArr","j","navigate","emailRef","undefined","passwordRef","handleSubmit","event","preventDefault","email","current","password","emailStored","localStorage","getItem","passwordStored","console","log","target","reset","fontSize","textAlign","margin","justifyItems","padding","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './Login.css'\nimport { useNavigate } from 'react-router-dom';\nimport { useRef } from 'react';\n\n\nconst Login = () => {\n\n\n  //dfghjkl\n  let captchaText = document.querySelector('#captcha');\n  let userText = document.querySelector('#textBox');\n  let submitButton = document.querySelector('#submit');\n  let output = document.querySelector('#output');\n  let refreshButton = document.querySelector('#refresh');\n\n  let alphaNums = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n  let emptyArr = [];\n  for (let i = 1; i <= 7; i++) {\n    emptyArr.push(alphaNums[Math.floor(Math.random() * alphaNums.length)]);\n  }\n  captchaText.innerHTML = emptyArr.join('');\n\n  userText.addEventListener('keyup', function (e) {\n    if (e.keyCode === 13) {\n      if (userText.value === captchaText.innerHTML) {\n        output.classList.add(\"greenText\");\n        output.innerHTML = \"Correct!\";\n      } else {\n        output.classList.add(\"redText\");\n        output.innerHTML = \"Incorrect, please try again\";\n      }\n    }\n  });\n  refreshButton.addEventListener('click', function () {\n    userText.value = \"\";\n    let refreshArr = [];\n    for (let j = 1; j <= 7; j++) {\n      refreshArr.push(alphaNums[Math.floor(Math.random() * alphaNums.length)]);\n    }\n    captchaText.innerHTML = refreshArr.join('');\n    output.innerHTML = \"\";\n  });\n  //dfghjkl\n  const navigate = useNavigate();\n\n  const emailRef = useRef(undefined);\n  const passwordRef = useRef(undefined);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    let emailStored = localStorage.getItem(\"email\")\n    let passwordStored = localStorage.getItem(\"password\")\n\n\n    if (email === emailStored && password === passwordStored) {\n      console.log(\"True Credentials\")\n      navigate('/home');\n    } else {\n      console.log(false)\n    }\n\n    event.target.reset();\n\n  };\n  return (\n    <>\n      <div style={{ fontSize: \"30px\", textAlign: \"center\", margin: \"1%\" }}>Task 1 - Kishor Dabi Sir</div>\n      <div class=\"my-form bg-dark\">\n        <div style={{ justifyItems: \"center\", padding: \"20px\", borderRadius: \"20px\", backgroundColor: \"white\" }}>\n          <h1>Login Form</h1>\n          <form onSubmit={handleSubmit} style={{ borderRadius: \"20px\", backgroundColor: \"#FFEBEE\", padding: \"20px\" }}>\n\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              class=\"email\"\n              placeholder=\"Email\"\n              ref={emailRef}\n            />\n\n            <input\n              type=\"text\"\n              id=\"password\"\n              name=\"password\"\n              class=\"password\"\n              placeholder=\"Password \"\n              ref={passwordRef}\n            />\n            <br />\n            <input type=\"checkbox\" value=\"lsRememberMe\" id=\"rememberMe\" />\n            <label for=\"rememberMe\">Save password</label>\n            <br />\n            <br />\n            <div id=\"captchaBackground\">\n              <span id=\"captcha\">captcha text</span>\n              <input id=\"textBox\" type=\"text\" name=\"text\" />\n              <div id=\"buttons\">\n                <input id=\"submit\" type=\"submit\" />\n                <button id=\"refresh\" type=\"submit\">Refresh</button>\n              </div>\n              <span id=\"output\"></span>\n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n\n          </form>\n        </div>\n        <p class=\"mt-4\">Not a member? <a href=\"/signup\">Signup now</a></p>\n      </div>\n    </>\n  )\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}